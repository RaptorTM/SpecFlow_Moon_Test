{
  "uuid": "60a2e0f8ade445a883af59e0411cc74d",
  "historyId": "Add two numbers",
  "fullName": "Add two numbers",
  "labels": [
    {
      "name": "thread",
      "value": "NonParallelWorker"
    },
    {
      "name": "host",
      "value": "DESKTOP-H0VPP8Q"
    },
    {
      "name": "feature",
      "value": "Calculator"
    },
    {
      "name": "tag",
      "value": "mytag"
    }
  ],
  "links": [],
  "name": "Add two numbers",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Expected result to be 120, but found 125.",
    "trace": "NUnit.Framework.AssertionException: Expected result to be 120, but found 125.\r\n   at FluentAssertions.Execution.LateBoundTestFramework.Throw(String message)\r\n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)\r\n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)\r\n   at FluentAssertions.Numeric.NumericAssertions`2.Be(T expected, String because, Object[] becauseArgs)\r\n   at SpecFlowAllure.Steps.CalculatorStepDefinitions.ThenTheResultShouldBe(Int32 result) in C:\\Studies\\Projects\\VS_Projects\\AT\\SpecFlowAllure\\SpecFlowAllure\\Steps\\CalculatorStepDefinitions.cs:line 63\r\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\r\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\r\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\r\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "Given  the first number is 50",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1643718736779,
      "stop": 1643718736801
    },
    {
      "name": "And  the second number is 70",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1643718736804,
      "stop": 1643718736805
    },
    {
      "name": "When  the two numbers are added",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1643718736805,
      "stop": 1643718736806
    },
    {
      "name": "Then  the result should be 125",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1643718736806,
      "stop": 1643718737124
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1643718736764,
  "stop": 1643718737143
}