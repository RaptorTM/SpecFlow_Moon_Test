# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: mcr.microsoft.com/dotnet/sdk:5.0-buster-slim

variables:
    ALLURE_LAUNCH_NAME: "${CI_PROJECT_NAME} - ${CI_COMMIT_SHORT_SHA}" #mandatory
    ALLURE_LAUNCH_TAGS: "regular, ${CI_COMMIT_REF_NAME}" #mandatory
    ALLURE_TESTPLAN_PATH: "testplan.json" #mandatory
    ALLURE_RESULTS: "allure-results" #mandatory

stages:
  - run-nunit
  - allure-report

run-nunit:
    stage: run-nunit
    
    script:
        - echo "-------------------- Global Project Env----------------------"
        - echo ${CI_COMMIT_SHORT_SHA}
        - echo ${CI_COMMIT_REF_NAME}
        - echo ${CI_PROJECT_NAME}
        - echo ${PRIVATE_TOKEN}
        - echo ${PROJECT_ID}
        - echo ${CONFIGURATION_ID}
        - echo ${TEST_PLAN_GLOBAL_ID}
        - echo ${TEST_RUN_ID}
        - echo ${URL}
        - dotnet restore
        - dotnet run --project SpecFlowAllure/SpecFlowAllure.csproj
    artifacts:
        when: always
        paths:
#            - allure-report/
            - allure-results/        
    allow_failure: true

run-testit-allure-adaptor:
    stage: allure-report
    image: python:3.7-alpine3.15
    script:
        - pip install testit-allure-adaptor
        - testit --url=${URL} --privatetoken=${PRIVATE_TOKEN} --projectid=${PROJECT_ID} --configurationid=${CONFIGURATION_ID} --resultsdir allure-results
    artifacts:
        when: always
        paths:
            - allure-results
    needs: ["run-nunit"]



